cls
cls()
install.packages("Rfacebook")
install.packages("RCurl")
help("Rfacebook")
help(Rfacebook)
??Rfacebook
cls
clear
setwd("~/")
setwd("~/")
q()
setwd("E:/R Machine Learning/Section 3")
library(arules)
library(arulesViz)
data("Groceries")
inspect(Groceries[1:3])
sort(itemFrequency(Groceries, type= "absolute"),
decreasing = TRUE)[1:10]
itemFrequencyPlot(Groceries, topN=10,type="absolute")
metric.params <- list(supp=0.001, conf=0.5)
rules <- apriori(Groceries, parameter = metric.params)
inspect(rules[1:5])
# pruning duplicate rules
prune.dup.rules <- function(rules){
rule.subset.matrix <- is.subset(rules, rules)
rule.subset.matrix[lower.tri(rule.subset.matrix, diag=T)] <- NA
dup.rules <- colSums(rule.subset.matrix, na.rm=T) >= 1
pruned.rules <- rules[!dup.rules]
return(pruned.rules)
}
rules <- sort(rules, by="confidence", decreasing = TRUE)
rules <- prune.dup.rules(rules)
inspect(rules[1:5])
rules <- apriori(Groceries, parameter = metric.params)
inspect(rules[1:5])
rules <- sort(rules, by="confidence", decreasing = TRUE)
inspect(rules[1:5])
rules <- sort(rules, by="lift", decreasing = TRUE)
inspect(rules[1:5])
metric.params <- list(supp=0.001,conf=0.5,minlen=2)
rules<-apriori(data=Groceries, parameter=metric.params,
appearance = list(default="lhs",rhs="soda"),
control = list(verbose=F))
rules<- sort(rules,decreasing = TRUE, by="confidence")
inspect(rules[1:5])
# finding items which are bought when we have an itemset on LHS
metric.params <- list(supp=0.001,conf = 0.3, minlen=2)
rules<-apriori(data=Groceries, parameter=metric.params,
appearance = list(default="rhs",lhs=c("yogurt", "sugar")),
control = list(verbose=F))
rules<-sort(rules,decreasing = TRUE, by="confidence")
inspect(rules[1:5])
plot(rules, method="graph", engine= "interactive")
